"""Add user authentication fields

Revision ID: f1a2b3c4d5e6
Revises: e565c0452c62
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f1a2b3c4d5e6'
down_revision = 'e565c0452c62'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add columns only if they don't exist
    import sqlalchemy as sa
    from alembic import context
    
    connection = context.get_bind()
    
    # Check if columns exist before adding them
    inspector = sa.inspect(connection)
    users_columns = [col['name'] for col in inspector.get_columns('users')]
    
    if 'username' not in users_columns:
        op.add_column('users', sa.Column('username', sa.String(), nullable=True))
    
    if 'hashed_password' not in users_columns:
        op.add_column('users', sa.Column('hashed_password', sa.String(), nullable=True))
    
    if 'is_active' not in users_columns:
        op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True, default=True))
    
    # Check if index exists before creating it
    indexes = [idx['name'] for idx in inspector.get_indexes('users')]
    if 'ix_users_username' not in indexes:
        op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'username')
    # ### end Alembic commands ###